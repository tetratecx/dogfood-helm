{{- if .Values.components.redis }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.redis.name }}-config
  namespace: {{ include "dynabank.namespace" . }}
  labels:
    {{- include "dynabank.labels" . | nindent 4 }}
    app.kubernetes.io/component: cache
data:
  redis.conf: |
    # Redis configuration for DynaBank demo
    maxmemory {{ .Values.redis.config.maxmemory }}
    maxmemory-policy {{ .Values.redis.config.maxmemoryPolicy }}
    save 900 1
    save 300 10
    save 60 10000
    appendonly yes
    appendfsync everysec
---
{{- if .Values.redis.persistence.enabled }}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Values.redis.name }}-pvc
  namespace: {{ include "dynabank.namespace" . }}
  labels:
    {{- include "dynabank.labels" . | nindent 4 }}
    app.kubernetes.io/component: cache
spec:
  accessModes:
    - {{ .Values.persistence.accessMode }}
  {{- if .Values.redis.persistence.storageClass }}
  storageClassName: {{ .Values.redis.persistence.storageClass }}
  {{- end }}
  resources:
    requests:
      storage: {{ .Values.redis.persistence.size }}
{{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.redis.name }}
  namespace: {{ include "dynabank.namespace" . }}
  labels:
    {{- include "dynabank.labels" . | nindent 4 }}
    app.kubernetes.io/component: cache
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "dynabank.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: cache
  template:
    metadata:
      labels:
        {{- include "dynabank.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: cache
    spec:
      serviceAccountName: {{ .Values.redis.serviceAccount.name | default (printf "%s-sa" .Values.redis.name) }}
      containers:
      - name: redis
        image: {{ include "dynabank.image" .Values.redis }}
        imagePullPolicy: {{ .Values.global.imagePullPolicy }}
        ports:
        - name: redis
          containerPort: 6379
          protocol: TCP
        command:
        - redis-server
        - /usr/local/etc/redis/redis.conf
        volumeMounts:
        - name: config
          mountPath: /usr/local/etc/redis/redis.conf
          subPath: redis.conf
        {{- if .Values.redis.persistence.enabled }}
        - name: data
          mountPath: /data
        {{- end }}
        livenessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        resources:
          {{- include "dynabank.resources" .Values.redis | nindent 10 }}
      volumes:
      - name: config
        configMap:
          name: {{ .Values.redis.name }}-config
      {{- if .Values.redis.persistence.enabled }}
      - name: data
        persistentVolumeClaim:
          claimName: {{ .Values.redis.name }}-pvc
      {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.redis.name }}
  namespace: {{ include "dynabank.namespace" . }}
  labels:
    {{- include "dynabank.labels" . | nindent 4 }}
    app.kubernetes.io/component: cache
spec:
  type: ClusterIP
  ports:
  - name: redis
    port: {{ .Values.redis.service.port }}
    targetPort: redis
    protocol: TCP
  selector:
    {{- include "dynabank.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: cache
{{- end }}