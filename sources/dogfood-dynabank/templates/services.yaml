{{- if .Values.components.fraudService }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fraud-service
  labels:
    app: fraud-service
    service: fraud-service
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fraud-service
  template:
    metadata:
      labels:
        app: fraud-service
        service: fraud-service
        version: v1
    spec:
      containers:
      - name: fraud-service
        image: {{ .Values.global.imageRegistry | default "us-east1-docker.pkg.dev/dogfood-cx/registryrepository" }}/dynabank/fraud-service:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
          name: http
        - containerPort: 9091
          name: metrics
        env:
        - name: PORT
          value: "8000"
        - name: LOG_LEVEL
          value: "info"
        - name: REDIS_URL
          value: "redis://redis:6379"
        - name: REDIS_PASSWORD
          value: ""
        - name: REDIS_DB
          value: "1"
        - name: KAFKA_BROKERS
          value: "kafka:29092"
        - name: KAFKA_TOPIC_FRAUD_SCORES
          value: "fraud.scores"
        - name: KAFKA_TOPIC_TRANSACTIONS
          value: "fineract.transactions"
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp-volume
          mountPath: /tmp
      volumes:
      - name: tmp-volume
        emptyDir: {}
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: fraud-service
  labels:
    app: fraud-service
    service: fraud-service
spec:
  selector:
    app: fraud-service
  ports:
  - name: http
    port: 8000
    targetPort: http
    protocol: TCP
  - name: metrics
    port: 9091
    targetPort: metrics
    protocol: TCP
  type: ClusterIP
{{- end }}
---
{{- if .Values.components.notificationService }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: notification-service
  labels:
    app: notification-service
    service: notification-service
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: notification-service
  template:
    metadata:
      labels:
        app: notification-service
        service: notification-service
        version: v1
    spec:
      containers:
      - name: notification-service
        image: {{ .Values.global.imageRegistry | default "us-east1-docker.pkg.dev/dogfood-cx/registryrepository" }}/dynabank/notification-service:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
        - containerPort: 9092
          name: metrics
        env:
        - name: PORT
          value: "8080"
        - name: LOG_LEVEL
          value: "info"
        - name: KAFKA_BROKERS
          value: "kafka:29092"
        - name: KAFKA_GROUP_ID
          value: "notification-service"
        - name: KAFKA_TOPIC_NOTIFICATIONS
          value: "notifications.queue"
        - name: KAFKA_TOPIC_AUDIT_TRAIL
          value: "audit.trail"
        - name: EMAIL_SMTP_HOST
          value: "localhost"
        - name: EMAIL_SMTP_PORT
          value: "587"
        - name: EMAIL_USERNAME
          value: ""
        - name: EMAIL_PASSWORD
          value: ""
        - name: SMS_PROVIDER
          value: "mock"
        - name: SMS_API_KEY
          value: ""
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        resources:
          requests:
            memory: "128Mi"
            cpu: "50m"
          limits:
            memory: "256Mi"
            cpu: "250m"
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp-volume
          mountPath: /tmp
      volumes:
      - name: tmp-volume
        emptyDir: {}
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: notification-service
  labels:
    app: notification-service
    service: notification-service
spec:
  selector:
    app: notification-service
  ports:
  - name: http
    port: 8080
    targetPort: http
    protocol: TCP
  - name: metrics
    port: 9092
    targetPort: metrics
    protocol: TCP
  type: ClusterIP
{{- end }}
---
{{- if .Values.components.webPortal }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-portal
  labels:
    app: web-portal
    service: web-portal
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: web-portal
  template:
    metadata:
      labels:
        app: web-portal
        service: web-portal
        version: v1
    spec:
      containers:
      - name: web-portal
        image: {{ .Values.global.imageRegistry | default "us-east1-docker.pkg.dev/dogfood-cx/registryrepository" }}/dynabank/web-portal:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
          name: http
        env:
        - name: PORT
          value: "3000"
        - name: REACT_APP_API_URL
          value: "http://transaction-api:3000"
        - name: REACT_APP_ENVIRONMENT
          value: "development"
        livenessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "200m"
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp-volume
          mountPath: /tmp
      volumes:
      - name: tmp-volume
        emptyDir: {}
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: web-portal
  labels:
    app: web-portal
    service: web-portal
spec:
  selector:
    app: web-portal
  ports:
  - name: http
    port: 3000
    targetPort: http
    protocol: TCP
  type: ClusterIP
{{- end }}