---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: crd-view-role
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": hook-succeeded
rules:
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions"]
    verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: crd-view-binding
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": hook-succeeded
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: crd-view-role
subjects:
  - kind: ServiceAccount
    name: default
    namespace: {{ .Release.Namespace }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: "crd-wait-job"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": hook-succeeded
    namespace: {{ .Release.Namespace }}
spec:
  template:
    spec:
      restartPolicy: Never
      containers:
        - name: crd-wait
          image: us-east1-docker.pkg.dev/dogfood-cx/registryrepository/dogfood-cluster-runner:latest
          imagePullPolicy: Always
          command:
            - sh
            - -c
            - |
              set -ex
              until kubectl get crd certificates.cert-manager.io; do
                echo "Waiting for CRD certificates.cert-manager.io to be available..."
                sleep 5
              done
              echo "CRD certificates.cert-manager.io is available."
