{{- if ( eq "TSE" (.Values.spec).flavor ) }}
apiVersion: batch/v1
kind: Job
metadata:
  name: "tse-bootstrap"
  namespace: {{ .Release.Namespace | quote }}
  labels:
{{ include "common.labels" . | indent 4 }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "5"
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  backoffLimit: 10
  completions: 1
  # Keep the job (and its pod) around for 3 days after it has finished so the logs can be viewed
  ttlSecondsAfterFinished: 259200
  template:
    metadata:
      name: "tse-bootstrap"
      labels:
{{ include "common.labels" . | indent 8 }}
    spec:
      restartPolicy: OnFailure
      serviceAccountName: tsb-operator-management-plane
      initContainers:
        {{- /* in case of upgrade ensure the admin password has been reloaded */}}
        {{- if .Release.IsUpgrade }}
        - name: iam-restart
          image: "{{ required "image.registry" .Values.image.registry }}/kubectl:v1.22.9-tetrate-v9"
          imagePullPolicy: Always
          command:
            - "sh"
            - "-c"
            - |
              set -ex;
              kubectl rollout restart deploy iam;
        {{- end }}
        - name: wait-for-components
          image: "{{ required "image.registry" .Values.image.registry }}/kubectl:v1.22.9-tetrate-v9"
          imagePullPolicy: Always
          command:
            - "sh"
            - "-c"
            - |
              set -ex;
              kubectl wait --for=condition=Available deployment/tsb -n {{ .Release.Namespace }} --timeout=10m;
              kubectl wait --for=condition=Available deployment/iam -n {{ .Release.Namespace }} --timeout=10m;
              kubectl wait --for=condition=Available deployment/envoy -n {{ .Release.Namespace }} --timeout=10m;
        - name: tctl-config
          image: "{{ required "image.registry" .Values.image.registry }}/tctl:{{ .Values.image.tag }}"
          imagePullPolicy: Always
          command:
          - "sh"
          - "-c"
          - |
            set -xe;
            tctl config clusters set tse --bridge-address envoy.{{ .Release.Namespace }}.svc.cluster.local:{{ default "8443" ((((.Values.spec).components).frontEnvoy).port)
            }} --tls-insecure;
            tctl config users set tse --username admin --password tse-bootstrap-09;
            tctl config profiles set tse --cluster tse --username tse;
            tctl config profiles set-current tse;
            tctl apply -f /var/bootstrap/bootstrap.yaml;
          volumeMounts:
            - mountPath: /var/bootstrap
              name: bootstrap
      containers:
        - name: invalidate-admin-password
          image: "{{ required "image.registry" .Values.image.registry }}/kubectl:v1.22.9-tetrate-v9"
          imagePullPolicy: Always
          command:
            - "sh"
            - "-c"
            - |
              set -ex;
              kubectl patch secrets admin-credentials -p '{"data": {"admin":"{{ "invalid-not-sha256" | b64enc }}"}}' --type strategic;
              kubectl rollout restart deploy iam;
      volumes:
        - name: bootstrap
          configMap:
            name: tse-bootstrap-configs
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: tse-bootstrap-configs
  namespace: {{ .Release.Namespace | quote }}
  labels:
{{ include "common.labels" . | indent 4 }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "4"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
data:
  bootstrap.yaml: |
    apiVersion: api.tsb.tetrate.io/v2
    kind: Organization
    metadata:
      name: tse
    spec:
      displayName: TSE Organization
      deletionProtectionEnabled: true
    {{- /* Organizations settings could be modified by the user, for example to add network reachability.
           Skipping it in an upgrade will not erase these changes. */}}
    {{- if not .Release.IsUpgrade }}
    ---
    apiVersion: api.tsb.tetrate.io/v2
    kind: OrganizationSetting
    metadata:
      organization: tse
      name: default
    spec:
      defaultSecuritySetting:
        authenticationSettings:
          trafficMode: REQUIRED
        authorization:
          mode: RULES
          rules:
            denyAll: true
    {{- end }}
    ---
    apiVersion: api.tsb.tetrate.io/v2
    kind: Tenant
    metadata:
      organization: tse
      name: tse
    spec:
      displayName: TSE Tenant
      deletionProtectionEnabled: true
    ---
    apiVersion: api.tsb.tetrate.io/v2
    kind: User
    metadata:
      organization: tse
      name: tse
    spec:
      displayName: TSE Administrator
      loginName: tse
      sourceType: MANUAL
    ---
    apiVersion: rbac.tsb.tetrate.io/v2
    kind: Role
    metadata:
      name: tse
    spec:
      displayName: TSE
      {{- /* Read access to orgs/tenants, full access to everything else */}}
      rules:
        - permissions:
            - READ
          types:
            - apiGroup: api.tsb.tetrate.io/v2
              kinds:
                - Organization
                - Tenant
        - permissions:
            - READ
            - WRITE
            - CREATE
            - DELETE
            - SET_POLICY
          types:
            - apiGroup: api.tsb.tetrate.io/v2
              kinds:
                - Cluster
                - OrganizationSetting
                - TenantSetting
                - Workspace
                - WorkspaceSetting
            - apiGroup: registry.tsb.tetrate.io/v2
              kinds:
                - Service
            - apiGroup: gateway.tsb.tetrate.io/v2
              kinds:
                - Group
                - EgressGateway
                - Tier1Gateway
                - IngressGateway
                - Gateway
            - apiGroup: traffic.tsb.tetrate.io/v2
              kinds:
                - Group
                - TrafficSetting
                - ServiceRoute
            - apiGroup: security.tsb.tetrate.io/v2
              kinds:
                - Group
                - ServiceSecuritySetting
                - SecuritySetting
            - apiGroup: istiointernal.tsb.tetrate.io/v2
              kinds:
                - Group
            - apiGroup: networking.istio.io/v1alpha3
              kinds:
                - EnvoyFilter
            - apiGroup: networking.istio.io/v1beta1
              kinds:
                - Gateway
                - ServiceEntry
                - DestinationRule
                - Sidecar
                - VirtualService
            - apiGroup: security.istio.io/v1beta1
              kinds:
                - PeerAuthentication
                - AuthorizationPolicy
                - RequestAuthentication
            - apiGroup: extensions.istio.io/v1alpha1
              kinds:
                - WasmPlugin
    {{- /* When a cluster is created, the cluster service account is added as admin of the organization in order to give it 'gitops' permissions.
           For this reason if we apply this access binding after this happens we would remove the cluster service accounts permissions from the organization. */}}
    {{- if not .Release.IsUpgrade }}
    ---
    apiVersion: rbac.tsb.tetrate.io/v2
    kind: AccessBindings
    metadata:
      fqn: organizations/tse
    spec:
      allow:
        - role: rbac/tse
          subjects:
            - team: organizations/tse/teams/all-users
    {{- end}}
{{- end }}
